@model ProductDetailsViewModel

@{
    ViewData["Title"] = "Details";
}

<div class="row">
    <div class="col-5">
        <img class="img-fluid" src="@Model.ImageDataUrl" />
    </div>
    <div class="col-7">
        <h2>@Html.DisplayFor(model => model.Name)</h2>
        <p>@Model.Description</p>
        <p>@Model.Price</p>
        <form asp-action="AddProductToShoppingCart" asp-controller="ShoppingCart" id="@Model.ProductId" method="post">
            <input type="hidden" asp-for="ProductId" />
            <input type="hidden" name="returnUrl" value="@ViewContext.HttpContext.Request.PathAndQuery()" />
            <button class="btn btn-lg btn-primary" type="submit">Add to cart</button>
        </form>
        
    </div>
</div>
<hr />
@switch (Model.ProductCategoryId)
{
    case ProductCategoryDictionary.CPU:
        @await Html.PartialAsync("_CentralProcessingUnitDetailsPartial", Model);
        break;
    case ProductCategoryDictionary.Motherboard:
        @await Html.PartialAsync("_MotherboardDetailsPartial", Model);
        break;
    case ProductCategoryDictionary.RAM:
        @await Html.PartialAsync("_RandomAccessMemoryDetailsPartial", Model);
        break;
    case ProductCategoryDictionary.GPU:
        @await Html.PartialAsync("_GraphicsProcessingUnitDetailsPartial", Model);
        break;
    case ProductCategoryDictionary.PSU:
        @await Html.PartialAsync("_PowerSupplyUnitDetailsPartial", Model);
        break;
    case ProductCategoryDictionary.HDD:
        @await Html.PartialAsync("_HardDiskDriveDetailsPartial", Model);
        break;
    case ProductCategoryDictionary.SSD:
        @await Html.PartialAsync("_SolidStateDriveDetailsPartial", Model);
        break;

}

<div>
    <a asp-action="Edit" asp-route-id="@Model.ProductId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
