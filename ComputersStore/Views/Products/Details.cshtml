@model ProductDetailsViewModel

@{
    ViewData["Title"] = "Details";
}

<div class="row">
    <div class="col-4">
        <img class="img-fluid product-details-img" src="@Model.ImageDataUrl" /> @*TODO: Czy można wywalić stąd klasę img-fluid?*@
    </div>
    <div class="col-8 d-flex flex-column justify-content-between">
        <div>
            <h2>@Html.DisplayFor(model => model.Name)</h2>
            <p>@Model.Description</p>
            <p>@Model.Price</p>
        </div>
        <form asp-action="AddProductToShoppingCart" asp-controller="ShoppingCart" id="@Model.ProductId" method="post" class="form-inline">
            <input type="hidden" name="ProductId" asp-for="ProductId" />
            <input type="hidden" name="returnUrl" value="@ViewContext.HttpContext.Request.PathAndQuery()" />
            <select class="form-control form-control mr-2 input-with-green-outline-on-focus" name="Quantity">
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
                <option value="6">6</option>
                <option value="7">7</option>
                <option value="8">8</option>
                <option value="9">9</option>
                <option value="10">10</option>
            </select>
            <button class="btn btn-green" type="submit">Add to cart</button>
        </form>
    </div>
</div>
<hr />
@switch (Model.ProductCategoryId)
{
    case ProductCategoryDictionary.CPU:
        @await Html.PartialAsync("_CentralProcessingUnitDetailsPartial", Model);
        break;
    case ProductCategoryDictionary.Motherboard:
        @await Html.PartialAsync("_MotherboardDetailsPartial", Model);
        break;
    case ProductCategoryDictionary.RAM:
        @await Html.PartialAsync("_RandomAccessMemoryDetailsPartial", Model);
        break;
    case ProductCategoryDictionary.GPU:
        @await Html.PartialAsync("_GraphicsProcessingUnitDetailsPartial", Model);
        break;
    case ProductCategoryDictionary.PSU:
        @await Html.PartialAsync("_PowerSupplyUnitDetailsPartial", Model);
        break;
    case ProductCategoryDictionary.HDD:
        @await Html.PartialAsync("_HardDiskDriveDetailsPartial", Model);
        break;
    case ProductCategoryDictionary.SSD:
        @await Html.PartialAsync("_SolidStateDriveDetailsPartial", Model);
        break;

}

<div>
    <a asp-action="Edit" asp-route-id="@Model.ProductId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
